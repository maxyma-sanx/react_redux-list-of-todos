{"version":3,"sources":["redux/features/currentTodo.ts","redux/features/filter.ts","redux/features/todos.ts","redux/store.ts","redux/hooks.ts","redux/selectors.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","getTodo","getFilter","getFilteredTodos","titleMatchesQuery","title","toLowerCase","includes","completed","TodoItem","dispatch","className","id","cn","onClick","TodoList","loading","filteredTodos","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","setLoading","userTodo","useEffect","fetchUser","a","userId","userFromServer","console","error","href","email","name","App","fetchTodos","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b5ed22e.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type FilterByQueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype FilterByStatusAction = {\n  type: 'filter/STATUS';\n  payload: string;\n};\n\nconst filterByQuery = (query: string): FilterByQueryAction => {\n  return {\n    type: 'filter/QUERY',\n    payload: query,\n  };\n};\n\nconst filterByStatus = (status: string): FilterByStatusAction => {\n  return {\n    type: 'filter/STATUS',\n    payload: status,\n  };\n};\n\nexport const actions = {\n  filterByQuery,\n  filterByStatus,\n};\n\ntype State = {\n  query: string;\n  status: string;\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\ntype Action = FilterByQueryAction | FilterByStatusAction;\n\nconst filterReducer = (state: State = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../../types/Todo';\n\ntype LoadTodosAction = {\n  type: 'todos/LOAD';\n  payload: Todo[];\n};\n\nconst loadTodos = (todos: Todo[]): LoadTodosAction => ({\n  type: 'todos/LOAD',\n  payload: todos,\n});\n\nexport const actions = { loadTodos };\n\ntype State = Todo[] | [];\ntype Action = LoadTodosAction;\n\nconst todosReducer = (state: State = [], action: Action): State => {\n  switch (action.type) {\n    case 'todos/LOAD':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from './features/currentTodo';\nimport filterReducer from './features/filter';\nimport todosReducer from './features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from './store';\n\nexport const getTodos = (store: RootState) => store.todos;\nexport const getTodo = (store: RootState) => store.currentTodo;\nexport const getFilter = (store: RootState) => store.filter;\nexport const getFilteredTodos = (store: RootState) => {\n  const { filter, todos } = store;\n\n  return todos.filter((todo) => {\n    const titleMatchesQuery = todo.title\n      .toLowerCase()\n      .includes(filter.query.toLowerCase());\n\n    if (filter.status === 'all') {\n      return titleMatchesQuery;\n    }\n\n    if (filter.status === 'active') {\n      return !todo.completed && titleMatchesQuery;\n    }\n\n    if (filter.status === 'completed') {\n      return todo.completed && titleMatchesQuery;\n    }\n\n    return false;\n  });\n};\n","/* eslint-disable no-console */\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getTodo } from '../../redux/selectors';\nimport { actions } from '../../redux/features/currentTodo';\n\ninterface TodoItemProps {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<TodoItemProps> = ({ todo }) => {\n  const currentTodo = useAppSelector(getTodo);\n\n  const dispatch = useAppDispatch();\n\n  const setTodo = (userTodo: Todo) => {\n    dispatch(actions.setTodo(userTodo));\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-success': todo.completed,\n            'has-text-danger': !todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye-slash': currentTodo && currentTodo.id === todo.id,\n                'fa-eye': !currentTodo || currentTodo.id !== todo.id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport { TodoItem } from '../TodoItem';\nimport { getFilteredTodos } from '../../redux/selectors';\n\ninterface TodoListProps {\n  loading: boolean;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ loading }) => {\n  const filteredTodos = useAppSelector(getFilteredTodos);\n\n  return (\n    <>\n      {!loading && (\n        <>\n          {filteredTodos.length === 0 ? (\n            <p className=\"notification is-warning\">\n              There are no todos matching current filter criteria\n            </p>\n          ) : (\n            <table className=\"table is-narrow is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>#</th>\n\n                  <th>\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </th>\n\n                  <th>Title</th>\n                  <th> </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {filteredTodos.map((todo) => (\n                  <TodoItem key={todo.id} todo={todo} />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { actions } from '../../redux/features/filter';\nimport { getFilter } from '../../redux/selectors';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(getFilter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => dispatch(actions.filterByStatus(event.target.value))}\n            value={status}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => dispatch(actions.filterByQuery(event.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch(actions.filterByQuery(''));\n                dispatch(actions.filterByStatus('all'));\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable operator-linebreak */\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL =\n  'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then((res) => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getTodo } from '../../redux/selectors';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions } from '../../redux/features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n  const userTodo = useAppSelector(getTodo);\n  const dispatch = useAppDispatch();\n\n  const removeTodo = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        setLoading(true);\n\n        if (userTodo) {\n          const userFromServer = await getUser(userTodo.userId);\n\n          setUser(userFromServer);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [userTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${userTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {`${userTodo?.title}`}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {userTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './redux/hooks';\nimport { getTodo } from './redux/selectors';\nimport { getTodos } from './api';\nimport { actions } from './redux/features/todos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const currentTodo = useAppSelector(getTodo);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        setLoading(true);\n\n        const todosFromServer = await getTodos();\n\n        dispatch(actions.loadTodos(todosFromServer));\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList loading={loading} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './redux/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}